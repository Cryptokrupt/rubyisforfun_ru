# Введение в ООП

Существует мнение, что Объектно-Ориентированное Программирование (ООП) является чем-то сложным, загадочным и недостижимым. Но на самом деле это довольно просто, если мы говорим о тех вещах, с которыми вам придется сталкиваться ежедневно. Правильное ООП может сильно облегчить жизнь программиста и проекта, но требует намного больше `brain power`, чем обычное ООП, которое повсеместно используется.

В этой книге мы рассмотрим обычное ООП для начинающих. Если вам интересна тема правильного ООП, мы рекомендуем прочитать книгу «[Elegant Objects](https://www.yegor256.com/elegant-objects.html)» Егора Бугаенко.

## Классы и объекты

Само название «Объектно-ориентированное программирование» подразумевает, что где-то должен быть объект. Что же такое объект? Из обычной жизни мы знаем, что все вокруг объекты. Например, книга на столе. Человек, идущий по улице. Автомобиль BMW E34, который едет по дороге. Но если присмотреться, то автомобиль BMW E34 — это определенный класс объектов. Среди всего множества автомобилей, автомобили этой модели точно такие же, абсолютно одинаковые. Но все-таки это разные экземпляры. 

Самый простейший пример класса это чертеж, который все чертили в школе:

{width: 40%}
![Технический чертеж](images/074-drawing.png)

На чертеже изображается какая-либо деталь, ее размеры, различные параметры: ширина, высота и т.д. Класс это примерно то же самое, что чертеж, рисунок или шаблон какой-то детали. Сам по себе этот шаблон в принципе бесполезен. Зачем нужны шаблоны? Шаблоны нужны для того, чтобы по ним что-то можно было сделать. Т.е. мы посмотрели на чертеж и уже на основе чертежа мы можем создать какую-то деталь.

Объект — как раз и есть эта деталь, которая создается на основе шаблона, или класса. У объекта есть также второе имя — «экземпляр» (`instance`) или «экземпляр класса» (`class instance`):

{width: 80%}
![Реальный объект на основе технического чертежа выше](images/074-drawing-2.png)

Классы и объекты в программировании это почти то же самое, что классы и объекты в жизни. Шаблон один, объектов много. По одному чертежу можно создать сколько угодно деталей.

Также и класс — один, объектов много. Мы можем объявить один класс и создать на его основе множество объектов:

{caption: "Класс и три объекта в Ruby"}
```ruby
class Car
end

car1 = Car.new
car2 = Car.new
car3 = Car.new
```

Все эти объекты будут храниться в памяти компьютера. Вот в общем-то и все объяснение, теперь вы знаете что такое классы и что такое объекты.