## Комбинирование условий

Условия после оператора `if` можно комбинировать. Иногда в одной строке необходимо делать несколько сравнений:

{line-numbers: false}
```ruby
if есть_в_кармане_пачка_сигарет and билет_на_самолет_с_серебристым_крылом
  puts 'Всё не так уж плохо на сегодняшний день'
end
```

(Минздрав предупреждает — курение опасно для вашего здоровья). Существуют два варианта комбинации условий: `И` и `ИЛИ`. Каждый вариант может выражаться или словом (`and` и `or` соответственно) или в виде специальных символов: `&&` и `||`. Последний символ называется `pipe` (труба) `operator`, т.к. он двойной, то можно сказать `double pipe operator`. Пример в REPL:

{line-numbers: false}
```ruby
$ irb
> 1 == 1 && 2 == 2
 => true
> 1 == 5 && 2 == 2
 => false
> 1 == 5 || 2 == 2
 => true
```

Существует также возможность использовать `and` вместо `&&` и `or` вместо `||`. Несмотря на то, что при этом читаемость программы улучшается, утилита статического анализа кода Rubocop «ругается» на такой синтаксис. Мы [рекомендуем](https://github.com/rubocop-hq/ruby-style-guide#no-and-or-or) использовать общепринятые `&&` и `||`.

Первый пример понятен: мы проверяем «1 == 1 И 2 == 2». Единица равна единице, а двойка равна двойке. Во втором примере мы проверяем «1 == 5 И 2 == 2». Двойка равна двойке как и в предыдущем примере, но единица пяти не равна. Т.к. мы комбинируем условие с помощью `И`, то мы и получаем результат «ложь». Если бы мы комбинировали результат с помощью `ИЛИ`, то это была бы правда — должно выполняться только одно из условий (что и демонстрирует третий пример).

Рассмотрим комбинирование условий на практике:

{line-numbers: false}
```ruby
puts 'Сколько вам лет?'
age = gets.to_i
puts 'Являетесь ли вы членом партии Единая Россия? (y/n)'
answer = gets.chomp.downcase
if age >= 18 && answer == 'y'
  puts 'Вход на сайт разрешен'
end
```

Запустим программу:

{line-numbers: false}
```
$ ruby app.rb
Сколько вам лет?
19
Являетесь ли вы членом партии Единая Россия? (y/n)
n

$ ruby app.rb
Сколько вам лет?
19
Являетесь ли вы членом партии Единая Россия? (y/n)
y
Вход на сайт разрешен
```

Т.е. для посещения (воображаемого) сайта пользователь должен ввести свой возраст. Далее мы выполняем проверку: если возраст больше или равен 18 и если пользователь — член партии Единая Россия, то разрешить доступ. Заметьте, что «больше или равен» мы указываем с помощью `>=`. Мы также могли бы написать:

{line-numbers: false}
```ruby
if (age > 18 || age == 18) && answer == 'y'
```

X> ## Задание 1 
X> Попробуйте написать следующие сравнения в REPL и догадаться, каков будет результат для языка руби. Заполните таблицы:

Выражение:  `0 == 0 && 2 + 2 == 4`

Результат:


Выражение: `1 == 2 && 2 == 1`

Результат:


Выражение:  `1 == 2 || 2 == 1` 

Результат:

X> ## Задание 2 
X> Напишите программу, которая спрашивает логин и пароль пользователя в консоли. Если имя «admin» и пароль «12345», программа должна выводить на экран «Доступ к банковской ячейке разрешен».
>
X> ## Задание 3 
X> Известно, что на Луне продают участки. Любой участок менее 50 квадратных метров стоит 1000 долларов. Участок площадью от 50 до 100 квадратных метров стоит 1500 долларов. От 100 и выше — по 25 долларов за квадратный метр. Напишите программу, которая запрашивает длину и ширину участка и выводит на экран его стоимость.
>
X> ## Задание 4 
X> Напишите программу «иммигрант». Программа должна задавать следующие вопросы: «У вас есть высшее образование? (y/n)», «У вас есть опыт работы программистом? (y/n)», «У вас более трех лет опыта? (y/n)». За каждый положительный ответ начисляется 1 балл (переменную можно назвать score). Если набралось 2 или более баллов программа должна выводить на экран «Добро пожаловать в США».