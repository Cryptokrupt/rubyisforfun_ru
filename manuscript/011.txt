## Запуск программы из файла

Запуск программы из файла ненамного сложнее. Достаточно передать аргумент интерпретатору Руби с именем файла:

{line-numbers: false}
```
$ ruby app.rb
```

В этом случае интерпретатор считает программу из файла app.rb и запустит ее так же, как если бы вы ввели эту программу и нажали `Ctrl+D`.

Но возникают вопросы: как и где сохранить эту программу, в чем ее набрать, какой редактор кода использовать? Для начала ответим на первый вопрос — «где» сохранить программу, так как этот вопрос подразумевает знакомство с файловой системой и в нем есть некоторые подводные камни.

Для Windows, операционной системы, с которой вам нужно как можно скорее уходить на Linux, необходимо создать директорию (каталог, папку) в разделе C: и назвать ее, например, *projects*. После этого нужно перейти в директорию, создать там файл и запустить его.

Другими словами, нужно уже уметь делать как минимум четыре вещи:

1) создавать директорию;
2) переходить в директорию;
3) создавать файл в директории и сохранять что-то в этот файл;
4) запускать файл (это мы уже умеем: `ruby app.rb`).

Тут можно было бы дать основные команды ОС Linux для этих целей и не завязываться на ОС Windows. Однако рынок диктует свои условия — большинство пользователей сейчас работают на Windows, а значит, с большой долей вероятности и у вас установлена эта операционная система. Но не стоит отчаиваться, мы исправим этот досадный факт, а пока постараемся как можно быстрее настроить нашу среду исполнения, чтобы мы могли писать и запускать программы, а исправлением займемся потом.

Умение ориентироваться в файловой системе — ключевой навык любого программиста. Как библиотекарь должен знать, где какая книга лежит, так и программист должен знать (или уметь разобраться, найти), где лежит тот или иной файл. Нужно всегда иметь в голове примерную «картинку» файловой системы.

Но из практики обучения студентов этому, казалось бы, простому делу выяснилось, что не все представляют себе, что такое файловая система и как эффективно работать с файлами (создавать, находить, переносить, переименовывать). Можно было бы написать список команд и дать задание запомнить эти команды. Но мы пойдем более гуманным и проверенным путем — мы познакомимся с файловым менеджером.
