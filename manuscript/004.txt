## Что мы будем изучать «»

Как уже было замечено ранее, существует множество направлений программирования. Каждое направление уникально, и требует своих собственных навыков. На взгляд авторов на данный момент существует два (возможно и больше) «проверенных» направления в программировании, которые дают максимальный результат за минимальный срок. Под результатом тут понимается как денежная компенсация, так и само умение что-то сделать своими руками.

Первое направление — это мобильная разработка: программы для мобильных телефонов (Android, iPhone), планшетов (iPad) и других устройств.

Второе направление — веб-программирование.

Если выбирать между мобильной разработкой и веб-программированием, то «быстрота освоения» любой из этих двух технологий по количеству вложенных усилий примерно одинакова. Однако, мобильная разработка обладает своими минусами. Например, Java — язык для составления программ для Android — был уже упомянут выше. Нельзя сказать, что он является «достаточно простым» для новичка. Если честно, то с этим можно жить. В Java нет ничего такого, что является непостижимым или очень сложным.

Однако, сама мобильная разработка часто подразумевает оптимизацию кода под мобильные устройства любыми средствами. Языки программирования и SDK (software development kit — набор разработчика для определенной платформы) очень часто навязывают определенный стиль разработки. И этот стиль сильно отличается от *классического*, объектно-ориентированного, программирования в сторону процедурного программирования. Процедурное программирование не всегда позволяет полностью использовать возможности языка, хотя это и не всегда важно, особенно если ваша задача — получить зарплату.

Второй момент в разработке программ для мобильных устройств заключается в том, что на данный момент существуют две основных мобильных платформы. Одна платформа принадлежит корпорации Apple, другая — Google. Как именно будут развиваться эти платформы в будущем целиком зависит от политики этих компаний.
 
В случае с веб-программированием на языке руби все выглядит немного иначе. Сам язык разрабатывается и поддерживается сообществом программистов. Веб-фреймворк rails, о котором мы еще поговорим, также поддерживается исключительно сообществом. Это позволяет программистам со всего света создавать удобный инструмент именно таким, каким хочется, не оглядываясь на политику какой-либо компании.

Более того, программы на языке руби редко исполняются на мобильных устройствах, поэтому «специально» оптимизировать их практически никогда не требуется. Ну и основное отличие руби от языков для мобильной разработки состоит в том, что руби это динамический язык — не в том смысле, что он динамично развивается (и это тоже) — а в том, что в нем присутствует так называемая *динамическая типизация данных*, о которой было уже упомянуто выше. 

Основное преимущество динамической типизации по сравнению со статической — меньше правил и меньше строгости, что дает более высокую скорость разработки приложений программистом (за счет более медленного исполнения написанных программ и «достаточной» надежности. Но скорость исполнения нас не особо интересует, ведь руби не используется для разработки мобильных приложений, хотя может работать ключевым звеном на сервере и обеспечивать функционирование мобильных приложений для iOS, Android, и т.д.).

Несомненно, существуют и другие направления в программировании, которые не были проверены авторами этой книги. Например, разработка компьютерных игр. Наверное, для того, чтобы «проверить» все направления не хватит жизни, поэтому мы оставим эту затею для пытливых умов, и займемся тем, что точно востребовано на рынке, дает возможность «быстрого входа», и является более или менее интересным и нескучным. 
