## Модули

Модуль (`module`) — это участок программы, который можно «включить» (`include`) в тот или иной класс:

{caption: "MyModule содержит логику для робота, человека и собаки."}
```ruby
module MyModule
  attr_accessor :x, :y

  def initialize(options={})
    @x = options[:x] || 0
    @y = options[:y] || 0
  end

  def right
    self.x += 1
  end

  def left
    self.x -= 1
  end

  def up
    self.y += 1
  end

  def down
    self.y -= 1
  end
end

class Robot
  include MyModule

  def label
    '*'
  end
end

class Dog
  include MyModule

  def up
  end

  def left
  end

  def label
    '@'
  end
end

class Human
  include MyModule

  def label
    'H'
  end
end
```

Выше мы определили модуль с помощью конструкции `module … end` и включили его в наши классы с помощью ключевого слова `include`. Диаграмма классов при этом выглядит следующим образом:

{width: 50%}
![Диаграмма классов, построенная в RubyMine. Три класса делят (share, или копируют) функциональность с помощью модуля.](images/079-diagram.png)
Рис. Диаграмма классов, построенная в RubyMine. Три класса делят (share, или копируют) функциональность с помощью модуля.

Визуально это похоже на наследование, но только в случае с модулями все немного более честно. Мы не говорим о том, что мы нашли что-то генетически общее между этими сущностями. Мы не говорим о том, что мы выделили главную абстракцию и несколько ее подвидов. Мы заявляем честно — мы скопировали код из модуля в эти три класса.
