## Наиболее часто используемые методы класса Hash

В общем и целом, структура данных «хеш» довольно простая. В языке руби существуют некоторые методы, которые вам могут встретиться чаще, чем остальные. В остальных языках эти методы похожи. Скажем, обращение к хешу (объекту) в JavaScript выглядит следующим образом:

{line-numbers: false}
```
$ node
> hh = {};
{}
> hh['something'] = 'blabla';
'blabla'
> hh
{ something: 'blabla' }
``` 

Различие лишь в том, что в JavaScript не существует типа *Symbol*, и в качестве ключей в большинстве случаев используются строки.

Хеши также реализованы в некоторых других инструментах, например в базах данных. Довольно известная база данных Redis ничто иное как `key-value storage` (хранилище «ключ-значение»). В предыдущих примерах мы делали записную книжку. Но представим, что нам нужно сохранять все эти данные в случае перезапуска программы. Первый вариант — сохранить все в файл. Этот способ прекрасно работает, но возможно он немного медленный, когда у вас есть несколько тысяч пользователей. Второй вариант — воспользоваться NoSQL базой данных через особый API (интерфейс взаимодействия).

В любом случае, используете ли вы библиотеку (gem), базу данных, язык руби или какой-то другой, для хеша всегда существует два основных метода:

* `get(key)` — получить значение (value)
* `set(key, value)` — установить значение для определенного ключа

[Документация к NoSQL](https://github.com/redis/redis-rb) базе данных Redis говорит нам то же самое:

{line-numbers: false}
```
redis.set("mykey", "hello world")
# => "OK"

redis.get("mykey")
# => "hello world"
```

Если посмотреть в Википедии, то Redis это ничто иное как хранилище ключ-значение:

> Redis is... key-value store…

Тут у читателя возникает вопрос — а зачем мне Redis-хеш, когда у меня есть хеш в языке руби? Во-первых, хеш в языке руби не сохраняет данные на диск. А во-вторых, Redis предназначен для эффективного хранения многих миллионов пар «ключ-значение», а хеш в языке руби обычно не хранит много пар.

Ниже мы рассмотрим наиболее часто встречающиеся методы класса Hash. Все эти методы также описаны в [документации](https://ruby-doc.org/core-2.5.1/Hash.html).